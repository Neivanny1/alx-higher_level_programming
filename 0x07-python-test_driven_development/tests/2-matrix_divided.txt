=======================
``matrix_divided`` module
=======================

Usage of ``matrix_divided``:
- two variables ``matrix`` and ``div``
- ``matrix`` must be a list of integers or floats with rows of the same size
- ``div`` must be a number (integer or float) and can't be 0
- `` all elements of matrix should be divided by div, rounded to 2 decimal places
-------------------

Import:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Divide 3x2 matrix by 3:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Divide 3x2 matrix containing a string by 3:
    >>> matrix_divided([[1, 2, "hello"], [4, 5, 6]], 3)
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Divide 3x2 matrix of different sizes by 3:
    >>> matrix_divided([[1, 2, 3, 4], [4, 5, 6]], 3)
    Traceback (most recent call last):
    	      ...
    TypeError: Each row of the matrix must have the same size

Divide 3x2 matrix by 0:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "Hello")
    Traceback (most recent call last):
    	      ...
    TypeError: div must be a number

Divide 3x2 matrix by 0:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    	      ...
    ZeroDivisionError: division by zero

Divide 3x2 matrix by float(inf):
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Divide 3x2 matrix but no div:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]])
    Traceback (most recent call last):
    	      ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

Call function with no arguments:
    >>> matrix_divided()
    Traceback (most recent call last):
    	      ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
